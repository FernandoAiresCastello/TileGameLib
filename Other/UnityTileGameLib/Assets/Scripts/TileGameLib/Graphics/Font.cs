using System;
using System.Collections;
using System.Collections.Generic;

namespace TileGameLib
{
    /// <summary>
    /// Collection of single-frame <see cref="TileSeq"/> objects representing ASCII characters used for printing text.
    /// </summary>
    public class Font
    {
        private static readonly int defaultSize = 256;
        private readonly List<TileSeq> chars = new List<TileSeq>();

        public Font()
        {
            LoadDefault();
        }

        public void Set(int index, BinaryString binaryString)
        {
            if (index < 0 || index >= chars.Count)
                throw new ArgumentException("Invalid font character index");

            chars[index] = new TileSeq(Tile.Binary(binaryString));
        }

        public TileSeq GetTile(int index)
        {
            if (index < 0 || index >= chars.Count)
                throw new ArgumentException("Invalid font character index");

            return chars[index];
        }

        public BinaryString GetBinary(int index)
        {
            return GetTile(index).First.ToBinary();
        }

        public void Add(BinaryString binaryString)
        {
            chars.Add(new TileSeq(Tile.Binary(binaryString)));
        }

        public void AddBlank()
        {
            chars.Add(TileSeq.Blank);
        }

        public void Clear()
        {
            chars.Clear();
            for (int i = 0; i < defaultSize; i++)
                AddBlank();
        }

        public void LoadDefault()
        {
            Clear();

            Set(32, "0000000000000000000000000000000000000000000000000000000000000000"); // 32 Space
            Set(33, "0011000000110000001100000011000000110000000000000011000000000000"); // 33 !
            Set(34, "0110110001101100011011000000000000000000000000000000000000000000"); // 34 "
            Set(35, "0000000000010100001111100001010000111110000101000000000000000000"); // 35 #
            Set(36, "0001000011111110110100001111111000010110110101101111111000010000"); // 36 $
            Set(37, "0000000001100010011001000000100000010000001001100100011000000000"); // 37 %
            Set(38, "0001000001111100011000000011100001100000011111000001000000000000"); // 38 &
            Set(39, "0000000000011000000110000011000000000000000000000000000000000000"); // 39 '
            Set(40, "0000110000011000001100000011000000110000000110000000110000000000"); // 40 (
            Set(41, "0011000000011000000011000000110000001100000110000011000000000000"); // 41 )
            Set(42, "0000000001101100001110001111111000111000011011000000000000000000"); // 42 *
            Set(43, "0000000000011000000110000111111000011000000110000000000000000000"); // 43 +
            Set(44, "0000000000000000000000000000000000011000000110000011000000000000"); // 44 ,
            Set(45, "0000000000000000000000000111111000000000000000000000000000000000"); // 45 -
            Set(46, "0000000000000000000000000000000000000000000110000001100000000000"); // 46 .
            Set(47, "0000000100000010000001000000100000010000001000000100000010000000"); // 47 /
            Set(48, "0000000011111110110001101101011011010110110001101111111000000000"); // 48 Digit 0
            Set(49, "0000000000111000000110000001100000011000000110000111111000000000"); // 49 Digit 1
            Set(50, "0000000001111110011001100000011001111110011000000111111000000000"); // 50 Digit 2
            Set(51, "0000000001111110000001100011110000000110000001100111111000000000"); // 51 Digit 3
            Set(52, "0000000001100110011001100110011001111110000001100000011000000000"); // 52 Digit 4
            Set(53, "0000000001111110011000000111111000000110011001100111111000000000"); // 53 Digit 5
            Set(54, "0000000001111110011000000111111001100110011001100111111000000000"); // 54 Digit 6
            Set(55, "0000000001111110000001100000110000011000001100000011000000000000"); // 55 Digit 7
            Set(56, "0000000001111110011001100011110001100110011001100111111000000000"); // 56 Digit 8
            Set(57, "0000000001111110011001100110011001111110000001100111111000000000"); // 57 Digit 9
            Set(58, "0000000000000000000110000001100000000000000110000001100000000000"); // 58 :
            Set(59, "0000000000000000000110000001100000000000000110000001100000001000"); // 59 ;
            Set(60, "0000000000000110000110000110000000011000000001100000000000000000"); // 60 <
            Set(61, "0000000000000000011111100000000001111110000000000000000000000000"); // 61 =
            Set(62, "0000000001100000000110000000011000011000011000000000000000000000"); // 62 >
            Set(63, "0111111001100110000001100001111000011000000000000001100000000000"); // 63 ?
            Set(64, "1111111010000010101110101010101010111110100000001111111000000000"); // 64 @
            Set(65, "0111111001100110011001100110011001111110011001100110011000000000"); // 65 Letter A
            Set(66, "0111111001100110011001100111110001100110011001100111111000000000"); // 66 Letter B
            Set(67, "0111111001100110011000000110000001100000011001100111111000000000"); // 67 Letter C
            Set(68, "0111110001100110011001100110011001100110011001100111110000000000"); // 68 Letter D
            Set(69, "0111111001100000011000000111110001100000011000000111111000000000"); // 69 Letter E
            Set(70, "0111111001100000011000000111110001100000011000000110000000000000"); // 70 Letter F
            Set(71, "0111111001100110011000000110111001100110011001100111111000000000"); // 71 Letter G
            Set(72, "0110011001100110011001100111111001100110011001100110011000000000"); // 72 Letter H
            Set(73, "0111111000011000000110000001100000011000000110000111111000000000"); // 73 Letter I
            Set(74, "0000011000000110000001100000011001100110011001100111111000000000"); // 74 Letter J
            Set(75, "0110011001100110011011000111100001100110011001100110011000000000"); // 75 Letter K
            Set(76, "0110000001100000011000000110000001100000011000000111111000000000"); // 76 Letter L
            Set(77, "1000001011000110111011101111111011010110110101101100011000000000"); // 77 Letter M
            Set(78, "0100011001100110011101100111111001101110011001100110001000000000"); // 78 Letter N
            Set(79, "0111111001100110011001100110011001100110011001100111111000000000"); // 79 Letter O
            Set(80, "0111111001100110011001100110011001111110011000000110000000000000"); // 80 Letter P
            Set(81, "0111111001100110011001100110011001100110011011100111111000000011"); // 81 Letter Q
            Set(82, "0111111001100110011001100110011001111100011001100110011000000000"); // 82 Letter R
            Set(83, "0111111001100110011000000111111000000110011001100111111000000000"); // 83 Letter S
            Set(84, "0111111000011000000110000001100000011000000110000001100000000000"); // 84 Letter T
            Set(85, "0110011001100110011001100110011001100110011001100111111000000000"); // 85 Letter U
            Set(86, "0110011001100110011001100010010000111100000110000001100000000000"); // 86 Letter V
            Set(87, "1100011011000110110101101101011011111110011011000110110000000000"); // 87 Letter W
            Set(88, "0110011001100110001111000001100000111100011001100110011000000000"); // 88 Letter X
            Set(89, "0110011001100110011001100110011001111110000110000001100000000000"); // 89 Letter Y
            Set(90, "0111111000000110000011000001100000110000011000000111111000000000"); // 90 Letter Z
            Set(91, "0001111000011000000110000001100000011000000110000001100000011110"); // 91 [
            Set(92, "1000000001000000001000000001000000001000000001000000001000000001"); // 92 \
            Set(93, "0111100000011000000110000001100000011000000110000001100001111000"); // 93 ]
            Set(94, "1111111111111111111111111111111111111111111111111111111111111111"); // 94 Solid box (^)
            Set(95, "0000000000000000000000000000000000000000000000000111111000000000"); // 95 _
            Set(96, "0000000000011000000110000011000000000000000000000000000000000000"); // 96 `
            Set(97, "0000000000000000011111000000110001111100011011000111111000000000"); // 97 Letter a
            Set(98, "0111000000110000001111100011011000110110001101100011111000000000"); // 98 Letter b
            Set(99, "0000000000000000011111100110011001100000011000000111111000000000"); // 99 Letter c
            Set(100, "0000111000001100011111000110110001101100011011000111110000000000"); // 100 Letter d
            Set(101, "0000000000000000011111100110011001111110011000000111111000000000"); // 101 Letter e
            Set(102, "0000000000111110001100000111110000110000001100000011000000000000"); // 102 Letter f
            Set(103, "0000000000000000011111100110110001101100011111000000110001111100"); // 103 Letter g
            Set(104, "0110000001100000011111000110110001101100011011000110111000000000"); // 104 Letter h
            Set(105, "0001100000000000001110000001100000011000000110000111111000000000"); // 105 Letter i
            Set(106, "0000011000000000000001100000011000000110001101100011011000111110"); // 106 Letter j
            Set(107, "0110000001100000011001100110110001111000011001100110011000000000"); // 107 Letter k
            Set(108, "0011100000011000000110000001100000011000000110000111111000000000"); // 108 Letter l
            Set(109, "0000000000000000111111101101011011010110110101101101011000000000"); // 109 Letter m
            Set(110, "0000000000000000011111100011011000110110001101100011011000000000"); // 110 Letter n
            Set(111, "0000000000000000011111100110011001100110011001100111111000000000"); // 111 Letter o
            Set(112, "0000000000000000011111100011011000110110001111100011000000110000"); // 112 Letter p
            Set(113, "0000000000000000011111000110110001101100011111000000110000001110"); // 113 Letter q
            Set(114, "0000000000000000011111100011011000110000001100000011000000000000"); // 114 Letter r
            Set(115, "0000000000000000011111100110000001111110000001100111111000000000"); // 115 Letter s
            Set(116, "0000000000110000011111100011000000110000001100000011111000000000"); // 116 Letter t
            Set(117, "0000000000000000011011000110110001101100011011000111111000000000"); // 117 Letter u
            Set(118, "0000000000000000011001100110011001100110001111000001100000000000"); // 118 Letter v
            Set(119, "0000000000000000110101101101011011010110111111100110110000000000"); // 119 Letter w
            Set(120, "0000000000000000011001100011110000011000001111000110011000000000"); // 120 Letter x
            Set(121, "0000000000000000011101100011011000110110001111100000011000111110"); // 121 Letter y
            Set(122, "0000000000000000011111100000011000011000011000000111111000000000"); // 122 Letter z
            Set(123, "0000111000001000000010000011000000001000000010000000111000000000"); // 123 {
            Set(124, "0001100000011000000110000001100000011000000110000001100000011000"); // 124 |
            Set(125, "0111000000010000000100000000110000010000000100000111000000000000"); // 125 }
            Set(126, "0000000001101100111111101111111001111100001110000001000000000000"); // 126 Heart emoji (~)
        }
    }
}
